{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\shash\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:8: DeprecationWarning: use options instead of chrome_options\n",
      "  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "failed\n",
      "{'name': '(2) LinkedIn', 'job_title': '0 notifications total', 'schools': '', 'location': 'Saudi Arabia', 'ln_url': 'https://www.linkedin.com/in/abdullah-almansur-2989358a/'}\n",
      "failed\n",
      "{'name': '(2) LinkedIn', 'job_title': '0 notifications total', 'schools': '', 'location': 'Saudi Arabia', 'ln_url': 'https://www.linkedin.com/in/abdullah-almansur-2989358a/'}\n",
      "{'name': '(2) Aanie Phillips', 'job_title': '0 notifications total', 'schools': 'Baylor College of Medicine, Northeastern University', 'location': 'Houston, Texas', 'ln_url': 'https://www.linkedin.com/in/aanie-phillips-6ba803124/'}\n",
      "{'name': '(2) Aaron Campbell', 'job_title': '0 notifications total', 'schools': 'Northeastern University', 'location': 'Greater Boston Area', 'ln_url': 'https://www.linkedin.com/in/aaron-campbell-953bb9103/'}\n",
      "{'name': '(2) Aaron Cooper', 'job_title': '0 notifications total', 'schools': '', 'location': 'Boston, Massachusetts', 'ln_url': 'https://www.linkedin.com/in/aaron-cooper-66417a46/'}\n",
      "{'name': '(2) Aaron Fu', 'job_title': '0 notifications total', 'schools': '', 'location': 'Roslyn, New York', 'ln_url': 'https://www.linkedin.com/in/aaron-fu-605a088a/'}\n",
      "{'name': '(2) Aaron Harlap', 'job_title': '0 notifications total', 'schools': 'Carnegie Mellon University, Carnegie Mellon University, Northeastern University', 'location': 'Greater Boston', 'ln_url': 'https://www.linkedin.com/in/aaron-harlap-4a22ba29/'}\n",
      "{'name': '(2) Aaron McPherson', 'job_title': '0 notifications total', 'schools': 'Northeastern University', 'location': 'Greater Boston Area', 'ln_url': 'https://www.linkedin.com/in/aaron-mcpherson-1b862883/'}\n",
      "{'name': '(2) Aaron Medley', 'job_title': '0 notifications total', 'schools': 'Northeastern University', 'location': 'United States', 'ln_url': 'https://www.linkedin.com/in/aaron-medley-505aa562/'}\n",
      "{'name': '(2) Aaron Nakasone', 'job_title': '0 notifications total', 'schools': 'Northeastern University, Iolani School', 'location': 'Boston, Massachusetts', 'ln_url': 'https://www.linkedin.com/in/aaron-nakasone-89ba79158/'}\n",
      "{'name': '(2) Aaron Reich', 'job_title': '0 notifications total', 'schools': 'Northeastern University', 'location': 'Boston, Massachusetts', 'ln_url': 'https://www.linkedin.com/in/aaron-reich-82340082/'}\n",
      "{'name': '(2) Aaron LaBrode', 'job_title': '0 notifications total', 'schools': 'Northeastern University', 'location': 'San Antonio, Texas', 'ln_url': 'https://www.linkedin.com/in/aaronlabrode/'}\n",
      "{'name': '(2) Aaron Zannini', 'job_title': '0 notifications total', 'schools': 'Northeastern University, Salem High School', 'location': 'Boston, Massachusetts', 'ln_url': 'https://www.linkedin.com/in/aaronzannini/'}\n",
      "{'name': '(2) Aashray Thatai', 'job_title': '0 notifications total', 'schools': 'Indian School of Business, Northeastern University', 'location': 'India', 'ln_url': 'https://www.linkedin.com/in/aashray-thatai-51362273/'}\n",
      "{'name': '(2) Aayush Parekh', 'job_title': '0 notifications total', 'schools': '', 'location': 'United States', 'ln_url': 'https://www.linkedin.com/in/aayush-parekh/'}\n",
      "{'name': '(2) Abate De Mey', 'job_title': '0 notifications total', 'schools': 'University of Bristol, Northeastern University', 'location': 'Los Angeles Metropolitan Area', 'ln_url': 'https://www.linkedin.com/in/abate-de-mey-5336a418/'}\n",
      "{'name': '(2) Abdannour Derdari', 'job_title': '0 notifications total', 'schools': 'Northeastern University', 'location': 'Boston, Massachusetts', 'ln_url': 'https://www.linkedin.com/in/abdannour-derdari-5099329a/'}\n",
      "{'name': '(2) Abdulla Almoosa', 'job_title': '0 notifications total', 'schools': 'Northeastern University', 'location': 'United Arab Emirates', 'ln_url': 'https://www.linkedin.com/in/abdullaalmoosa/'}\n",
      "{'name': '(2) Abdullah Almansur', 'job_title': '0 notifications total', 'schools': 'Northeastern University, Collège du Léman', 'location': 'Saudi Arabia', 'ln_url': 'https://www.linkedin.com/in/abdullah-almansur-2989358a/'}\n"
     ]
    },
    {
     "ename": "KeyError",
     "evalue": "0",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-54-22bebce62cc6>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m     51\u001b[0m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0muserDetailsDict\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     52\u001b[0m     \u001b[0musersDetailsList\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0muserDetailsDict\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 53\u001b[1;33m \u001b[0mkeys\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0musersDetailsDict\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkeys\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     54\u001b[0m \u001b[1;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'LinkedIn_Users.csv'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'wb'\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0moutput_file\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     55\u001b[0m     \u001b[0mdict_writer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcsv\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDictWriter\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutput_file\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkeys\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 0"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "import pandas as pd\n",
    "from parsel import Selector\n",
    "from selenium import webdriver\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "options = webdriver.ChromeOptions()\n",
    "options.add_argument('headless')\n",
    "driver = webdriver.Chrome(executable_path=\"C:\\\\Users\\\\shash\\\\Downloads\\\\chromedriver.exe\", chrome_options=options)\n",
    "driver.get('https://www.linkedin.com/')\n",
    "\n",
    "driver.find_element_by_xpath('//a[text()=\"Sign in\"]').click()\n",
    "username_input = driver.find_element_by_name('session_key')\n",
    "username_input.send_keys('Mention your Email Id here')\n",
    "\n",
    "password_input = driver.find_element_by_name('session_password')\n",
    "password_input.send_keys('Mention Your Password here')\n",
    "# click on the sign in button\n",
    "# we're finding Sign in text button as it seems this element is seldom to be changed\n",
    "driver.find_element_by_xpath('//button[text()=\"Sign in\"]').click()\n",
    "\n",
    "linkedinSample = pd.read_csv('LinkedIn_sample_users.csv')\n",
    "linkedinSample_list = linkedinSample['Links']\n",
    "usersDetailsList = []\n",
    "\n",
    "# visit each profile in linkedin and grab detail we want to get\n",
    "for profile in linkedinSample_list:\n",
    "    driver.get(profile)\n",
    "\n",
    "    try:\n",
    "        sel = Selector(text=driver.page_source)\n",
    "        name = sel.xpath('//title/text()').extract_first().split(' | ')[0]\n",
    "        job_title = sel.xpath('//h2/text()').extract_first().strip()\n",
    "        schools = ', '.join(sel.xpath('//*[contains(@class, \"pv-entity__school-name\")]/text()').extract())\n",
    "        location = sel.xpath('//*[@class=\"t-16 t-black t-normal inline-block\"]/text()').extract_first().strip()\n",
    "        ln_url = driver.current_url\n",
    "        \"\"\"\n",
    "        you can add another logic in case parsing is failed, ie because no job title is found\n",
    "        because the linkedin user isn't add it\n",
    "        \"\"\"\n",
    "    except:\n",
    "        print('failed')\n",
    "\n",
    "    # print to console for testing purpose\n",
    "    userDetailsDict = {}\n",
    "    userDetailsDict['name'] = name\n",
    "    userDetailsDict['job_title'] = job_title\n",
    "    userDetailsDict['schools'] = schools\n",
    "    userDetailsDict['location'] = location\n",
    "    userDetailsDict['ln_url'] = ln_url\n",
    "    \n",
    "    print(userDetailsDict)\n",
    "    usersDetailsList.append(userDetailsDict)\n",
    "keys = usersDetailsDict[0].keys()\n",
    "with open('LinkedIn_Users.csv', 'wb') as output_file:\n",
    "    dict_writer = csv.DictWriter(output_file, keys)\n",
    "    dict_writer.writeheader()\n",
    "    dict_writer.writerows(usersDetailsDict)\n",
    "\n",
    "with open('Linkedin_Users.csv', 'w', encoding='utf8', newline='') as output_file:\n",
    "    fc = csv.DictWriter(output_file, fieldnames=usersDetailsList[0].keys())\n",
    "    fc.writeheader()\n",
    "    fc.writerows(usersDetailsList)\n",
    "    \n",
    "    \n",
    "   # print(usersDetailsDict)\n",
    "\n",
    "#    writer.writerow([name, job_title, schools, location, ln_url])\n",
    "\n",
    "driver.quit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
